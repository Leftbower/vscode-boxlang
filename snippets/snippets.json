{
	"component": {
		"prefix": "component …",
		"body": [
      "$2",
			"component$1 {",
			"\t$0",
			"}"
		],
		"description": "Component definition",
        "scope": "cfml",
        "context": "script"
  },
  "function": {
		"prefix": "function …",
		"body": [
      "$0",
			"${1|access,public,package,private,remote|} ${2|returnType,any,array,binary,boolean,component,date,function,guid,numeric,query,string,struct,uuid,variableName,void,xml|} function ${3:name}($4) {",
			"\t$5",
			"}"
		],
		"description": "Function definition",
        "scope": "cfml",
        "context": "script"
	},
	"argument": {
		"prefix": "arg …",
		"body": "${1:required }${2|any,array,binary,boolean,component,date,function,guid,numeric,query,string,struct,uuid,variableName,void,xml|} ${3:name}$0",
		"description": "Argument",
        "context": "script"
	},
	"switch": {
		"prefix": "switch …",
		"body": [
			"switch (${1:expression}) {",
			"\tcase ${2:value}:",
			"\t\t${3}",
			"\t\tbreak;${4}",
			"\tdefault:",
			"\t\t${5}",
			"}$0"
		],
		"description": "Switch block",
        "scope": "cfml",
        "context": "script"
	},
	"case": {
		"prefix": "case …",
		"body": [
			"case ${1:value}:",
			"\t${2}",
			"\tbreak;$0"
		],
		"description": "Case block",
        "scope": "cfml",
        "context": "script"
	},
	"dowhile": {
		"prefix": "do while …",
		"body": [
			"do {",
			"\t${1}",
			"} while (${2:condition});$0"
		],
		"description": "Do-While loop",
        "scope": "cfml",
        "context": "script"
	},
	"while": {
		"prefix": "while …",
		"body": [
			"while (${1:condition}) {",
			"\t${2}",
			"}$0"
		],
		"description": "While loop",
        "scope": "cfml",
        "context": "script"
	},
	"if": {
		"prefix": "if …",
		"body": [
			"if (${1:condition}) {",
			"\t${2}",
			"}$0"
		],
		"description": "If block",
        "scope": "cfml",
        "context": "script"
	},
	"if else": {
		"prefix": "ifelse …",
		"body": [
			"if (${1:condition}) {",
			"\t${2}",
			"} else {",
			"\t${3}",
			"}$0"
		],
		"description": "If-Else block",
        "scope": "cfml",
        "context": "script"
	},
	"else": {
		"prefix": "else …",
		"body": [
			"else {",
			"\t${1}",
			"}$0"
		],
		"description": "Else block",
        "scope": "cfml",
        "context": "script"
	},
	"elseif": {
		"prefix": "elseif …",
		"body": [
			"else if (${1:condition}) {",
			"\t${2}",
			"}$0"
		],
		"description": "Else-if block",
        "scope": "cfml",
        "context": "script"
	},
	"for": {
		"prefix": "for …",
		"body": [
			"for (${1:i} = ${2:1}; ${1:i} < $3; ${1:i}++) {",
			"\t${4}",
			"}$0"
		],
		"description": "For loop",
        "scope": "cfml",
        "context": "script"
	},
	"foreach": {
		"prefix": "foreach …",
		"body": [
			"for (${1:variable} in ${2:collection}) {",
			"\t${3}",
			"}$0"
		],
		"description": "For-each loop",
        "scope": "cfml",
        "context": "script"
	},
	"trycatch": {
		"prefix": "try …",
		"body": [
			"try {",
			"\t${1}",
			"} catch (${2:exType} ${3:exName}) {",
			"\t${4}",
			"}$0"
		],
		"description": "Try-catch block",
        "scope": "cfml",
        "context": "script"
	},
	"trycatchfinally": {
		"prefix": "tryfinally …",
		"body": [
			"try {",
			"\t${1}",
			"} catch (${2:exType} ${3:exName}) {",
			"\t${4}",
			"} finally {",
			"\t${5}",
			"}$0"
		],
		"description": "Try-catch-finally block",
        "scope": "cfml",
        "context": "script"
	},
	"catch": {
		"prefix": "catch …",
		"body": [
			"catch (${2:exType} ${3:exName}) {",
			"\t${4}",
			"}$0"
		],
		"description": "Catch block",
        "scope": "cfml",
        "context": "script"
	}
}
